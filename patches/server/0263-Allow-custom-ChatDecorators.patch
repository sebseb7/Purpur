From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <blake.galbreath@gmail.com>
Date: Mon, 11 Jul 2022 20:44:19 -0500
Subject: [PATCH] Allow custom ChatDecorators

Requires NMS to utilize. I'll write an API for this once our upstreams calm down with the changes.

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 87a0bd56a75f10bdea9db29aaf0b6c0760fb195c..48f4122696dfb9ebc6c09b0036f5fa3591ce7c5e 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -2847,6 +2847,15 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             new com.google.common.util.concurrent.ThreadFactoryBuilder().setDaemon(true).setNameFormat("Async Chat Thread - #%d").setUncaughtExceptionHandler(new net.minecraft.DefaultUncaughtExceptionHandlerWithName(net.minecraft.server.MinecraftServer.LOGGER)).build()); // Paper
 
     public ChatDecorator getChatDecorator() {
+        // Purpur start
+        return this.chatDecorator;
+    }
+    public void setChatDecorator(ChatDecorator chatDecorator) {
+        this.chatDecorator = chatDecorator;
+    }
+    private ChatDecorator chatDecorator = getPaperHardcodedChatDecorator();
+    public ChatDecorator getPaperHardcodedChatDecorator() {
+        // Purpur end
         // Paper start - moved to ChatPreviewProcessor
         return ChatDecorator.create((sender, commandSourceStack, message) -> {
             final io.papermc.paper.adventure.ChatDecorationProcessor processor = new io.papermc.paper.adventure.ChatDecorationProcessor(this, sender, commandSourceStack, message);
